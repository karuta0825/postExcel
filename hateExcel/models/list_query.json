{

  "select" : {
    "kids"                : "SELECT U.id, U.kid, user_name AS user_name, U.server, U.userkey, U.db_password, U.fenics_key, U.number_pc, (SELECT COUNT(kid) FROM clients WHERE kid = U.kid AND is_admin = 0) AS client_number, U.number_id, U.start_id, name AS creater, IFNULL((SELECT DATE_FORMAT(create_on, '%Y/%m/%d') FROM historys H WHERE kid = U.kid ORDER BY create_on DESC LIMIT 1), DATE_FORMAT(U.create_on, '%Y/%m/%d')) AS update_on, ENV.system_type, ENV.version, U.is_busiv, U.has_mobile, U.is_registered FROM kids AS U LEFT JOIN login_users AS L ON U.create_user_id = L.id LEFT JOIN customers AS cus ON U.kid = cus.kid LEFT JOIN environments AS ENV ON U.environment_id = ENV.id;",
    "servers"             : "SELECT SV.id, SV.ip, SV.name, SV.type, ENV.version FROM servers AS SV INNER JOIN environments AS ENV ON SV.environment_id = ENV.id order by name, ip, version" ,
    "clients"             : "SELECT kid, client_id, client_pass, create_user_id, DATE_FORMAT( create_on, '%Y-%m-%d') as create_on, is_admin FROM clients where kid = ? order by client_id;",
    "users"               : "SELECT * FROM login_users where uid = ? and password = ?;",
    "header"              : "SELECT * FROM columns where uid = 0;",
    "show_columns"        : "SELECT * FROM columns where uid = ?;",
    "services"            : "SELECT * FROM services;",
    "licenses"            : "SELECT * FROM licenses WHERE kid = ?;" ,
    "base_info"           : "SELECT * FROM CUSTOMERS WHERE kid = ?;",
    "usrHistorys"         : "SELECT H.type, H.content_name, H.item_name, H.before, H.after, DATE_FORMAT( create_on, '%Y-%m-%d %H:%i:%s') as create_on, L.name as creater FROM HISTORYS H LEFT JOIN login_users L ON H.create_user_id = L.id WHERE kid = ? order by create_on desc;",
    "historys"            : "SELECT H.id, H.kid, H.type, H.content_name, H.item_name, H.`before`, H.`after`, DATE_FORMAT( H.create_on, '%Y/%m/%d') as create_on, L.name FROM historys H left join login_users L on H.create_user_id = L.id order by id desc limit 10;",
    "moreHistorys"        : "SELECT H.id, H.kid, H.type, H.content_name, H.item_name, H.`before`, H.`after`, DATE_FORMAT( H.create_on, '%Y/%m/%d') as create_on, L.name FROM historys H left join login_users L on H.create_user_id = L.id where H.id < ? order by id desc limit 11;",
    "partners"            : "SELECT * FROM partners WHERE kid = ?;",
    "customers"           : "SELECT * FROM CUSTOMERS WHERE kid = ?;",
    "userkey"             : "SELECT userkey FROM kids WHERE userkey = ?;",
    "kid"                 : "SELECT kid FROM kids WHERE environment_id = ? order by kid desc;",
    "db_password"         : "SELECT db_password from kids WHERE db_password = ?;",
    "environments"        : "SELECT * FROM environments;",
    "find_environment_id" : "select id from environments where system_type = ? and version = ?;",
    "fenics"              : "SELECT kid, fenics_key, fenics_id, `password`, inet_ntoa(fenics_ip) as fenics_ip, DATE_FORMAT( create_on, '%Y/%m/%d') as create_on, DATE_FORMAT( start_on, '%Y/%m/%d') as start_on FROM customer.fenics WHERE kid = ?;",
    "memos"               : "SELECT M.id, kid, title, priority_id, CASE priority_id WHEN 1 THEN 'emergency' WHEN 2 THEN 'important' WHEN 3 THEN 'reminder' ELSE '' END AS priority, message, case when CHAR_LENGTH(message) > 10 then CONCAT( LEFT(message, 10), '...') else message end as short_msg, date_format( ifnull( update_on, create_on ), '%Y/%m/%d') as create_on, L.name FROM memos M left join login_users L on ifnull( M.update_user_id, M.create_user_id ) = L.id where kid = ?;",
    "is_unique_fenicskey" : "SELECT fenics_key FROM fenics WHERE fenics_key = ?;",
    "get_new_fenics_ip"   : "select case SUBSTRING_INDEX(INET_NTOA(fenics_ip), '.', -1) when 254 then fenics_ip+3 else fenics_ip+1 end as next_ip from fenics order by fenics_ip desc limit 1;",
    "find_last_fenics_id" : "select fenics_id from fenics where kid = ? order by fenics_id desc limit 1;",
    "find_last_client_id" : "SELECT client_id FROM clients where kid = ? and is_admin = 0 order by client_id desc limit 1;",
    "licenses"            : "select * from licenses where kid = ?;",
    "get_version_by_kid"  : "SELECT version FROM kids K left join environments E on K.environment_id = E.id where kid = ?",
    "get_services_by_version" : "select * from services where version = ?;"
  },

  "update" : {
    "date"          : "UPDATE USERS SET updateDate = ? WHERE kid = ?",
    "client_number" : "UPDATE USERS SET client_number = ? WHERE kid = ?",
    "columns"       : "UPDATE columns SET kid = ?, company = ?, server = ?, userKey = ?, genics = ?, name = ?, client_number = ?, update_on = ? WHERE uid = ?;",
    "customers"     : "UPDATE customers SET ? WHERE ?",
    "partners"      : "UPDATE partners SET ? WHERE ?",
    "licenses"      : "UPDATE licenses SET ? WHERE ?",
    "kids"          : "UPDATE kids SET ? WHERE ?",
    "memos"         : "UPDATE memos SET ? WHERE ?",
    "servers"       : "UPDATE servers SET ? WHERE id = ?;"
  },

  "insert" : {
    "historys"            : "INSERT INTO historys SET ?;",
    "make_user"           : "INSERT INTO kids set ?;",
    "clients"             : "INSERT INTO clients set ?;",
    "make_fenics_account" : "INSERT INTO fenics set ?",
    "make_memo"           : "INSERT INTO memos set ?",
    "make_client"         : "INSERT INTO clients set ?;"
  },

  "delete" : {
    "kids"    : "DELETE FROM kids where ?;",
    "clients" : "DELETE FROM clients where ?;",
    "fenics"  : "DELETE FROM fenics where ?",
    "memos"   : "DELETE FROM memos where ?"
  }
}
